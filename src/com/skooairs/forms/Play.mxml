<?xml version="1.0"?>

<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:qs="qs.controls.*"
				xmlns:custom="com.skooairs.components.custom.*"
				xmlns:button="com.skooairs.components.buttons.*"
				clipContent="false">

		<!-- ========================================================================== -->

	   	<fx:Script>
			<![CDATA[
				import com.skooairs.utils.Utils;
				
				import com.skooairs.constants.Session;
				import com.skooairs.constants.Names;
				import com.skooairs.constants.Numbers;
				import com.skooairs.constants.Translations;
				
				import com.skooairs.core.Pager;
				import com.skooairs.core.SquareMover;
				import com.skooairs.core.SquareExploder;
				import com.skooairs.core.PointsCounter;
				import com.skooairs.core.MusicPlayer;
				
				import spark.effects.Animate;
				import spark.effects.animation.MotionPath;
				import spark.effects.animation.SimpleMotionPath;        
				import spark.effects.animation.Keyframe;
				
				import mx.rpc.events.ResultEvent;
				import spark.components.Label;
				
				//-----------------------------------------------------------------------------------//
				
				public function reset():void {
					Session.GAME_OVER = false;
					Session.NB_BOOMS = 3;
					
					SquareExploder.getInstance().reset();
					PointsCounter.getInstance().reset();
					SquareMover.getInstance().reset();
					
					playGameTimer();
					
					if(Session.player.uralysUID == "NOT_CONNECTED")
						Session.game.message(Translations.LOG_IN_TO_SEE_RECORDS.getItemAt(Session.LANGUAGE) as String, 4);
					else
						playerWrapper.getRecord(Session.player.uralysUID, Session.TIME, Session.COLORS);
				}
				
				private function onGetRecord(event:ResultEvent):void{
					Session.CURRENT_RECORD = event.result as int;
				}
				
				public function moveHandler(e:MouseEvent):void{
					if(!Session.GAME_OVER)
						SquareMover.getInstance().moveHandler(e, true);
				} 
				
				public function clickHandler(e:MouseEvent):void{
					if(!Session.GAME_OVER)
						SquareMover.getInstance().clickHandler(e);
				} 
				
				public function explodeSquare(image:Image):void{
					
					var x_effect:SimpleMotionPath = new SimpleMotionPath();
					x_effect.valueTo = image.x + 150 - Utils.random(300);
					x_effect.property = "x";
					
					
					var y_effect:SimpleMotionPath = new SimpleMotionPath();		
					y_effect.keyframes = new Vector.<Keyframe>();
					y_effect.keyframes.push( new Keyframe( 0, image.y) );
					y_effect.keyframes.push( new Keyframe( 40, image.y - 12) );
					y_effect.keyframes.push( new Keyframe( 80, image.y) );
					y_effect.keyframes.push( new Keyframe( 1200, image.y + 350) );
					y_effect.property = "y";
					
					var alpha_effect:SimpleMotionPath = new SimpleMotionPath();		
					alpha_effect.valueTo = 0;
					alpha_effect.property = "alpha";
					
					
					var vector:Vector.<MotionPath> = new Vector.<MotionPath>();
					vector.push( x_effect );
					vector.push( y_effect );
					vector.push( alpha_effect );
					
					var explosionAnimator:Animate = new Animate();
					explosionAnimator.motionPaths = vector;
					explosionAnimator.duration = 1200;
					explosionAnimator.targets.push(image);
					explosionAnimator.play();
				}
				
				//-----------------------------------------------------------------------------------//
				// Game Timer
				
				private var gameTimer:Timer;
				private var gameTimerDone:Boolean = false;
				public var secondsSpent:int = 0;
				public var seconds:int;
				
				private function playGameTimer():void {
					resetGameTimer();
					// 1000 ms - 15ms for the operations
					gameTimer = new Timer(985, seconds);
					gameTimer.addEventListener(TimerEvent.TIMER, onTickGame);
					gameTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onCompleteGame);
					gameTimer.start();
				}
				
				private function onTickGame(evt:TimerEvent):void {
					var totalSecondsRemaining:int = seconds - ++secondsSpent;
					var nbMinutesRemaining:int = totalSecondsRemaining/60;
					var nbSecsRemaining:int = totalSecondsRemaining - nbMinutesRemaining*60;
					
					gameTimerLabel.text = nbMinutesRemaining + "'" + (nbSecsRemaining < 10 ? "0" : "") + nbSecsRemaining;
				}
				
				private function onCompleteGame(evt:Event):void {
					stopGameTimer();
				}
				
				private function stopGameTimer():void {
					gameTimer.stop();
					gameTimerDone = true;
					gameOver();
				}
				
				private function resetGameTimer():void {
					secondsSpent = 0;
					
					switch(Session.TIME){
						case Numbers.TIME_2_MIN:
							seconds = 120;
							break;
						case Numbers.TIME_3_MIN:
							seconds = 180;
							break;
						case Numbers.TIME_5_MIN:
							seconds = 300;
							break;
						case Numbers.TIME_7_MIN:
							seconds = 420;
							break;
						case Numbers.TIME_10_MIN:
							seconds = 600;
							break;
						default :
							seconds = -1;
					}
					
					gameTimerLabel.text = seconds/60 + ":00";
				}
				
				
				//-----------------------------------------------------------------------------------//
				
				private function endGame():void{
					
					if(Session.LOGGED_IN
						&& Session.CURRENT_RECORD < Session.POINTS){
						Session.player.surname = surnameInput.text;
						playerWrapper.storeRecord(Session.player.uralysUID, surnameInput.text, Session.TIME, Session.COLORS, Session.POINTS);
					}
					
					Pager.getInstance().goToView(Numbers.VIEW_HOME);
				}
				
				public function boomButtonPushed():void {
					if(SquareMover.getInstance().boomButtonPushed()){
						Session.NB_BOOMS--;
					}
				}
				
				public function addBoomer():void {
					Session.NB_BOOMS++;
				}
				
				
				private var labels:Array = [];
				
				public function pointsMessage(base:int, bonus:int):void {
					var baseLabel:Label = new Label();
					baseLabel.text = "+" + base;
					baseLabel.styleName = "normalWhiteStyle";
					baseLabel.x = 200;
					board.addElement(baseLabel);
					appearBaseLabelEffect.target = baseLabel;
					appearBaseLabelEffect.play();
					labels.push(baseLabel);
					
					if(bonus > 1){
						
						var bonusLabel:Label = new Label();
						bonusLabel.styleName = "bigRedStyle";
						bonusLabel.text = "X" + bonus;
						bonusLabel.x = 250;
						labels.push(bonusLabel);
						board.addElement(bonusLabel);
						appearBonusLabelEffect.target = bonusLabel;
						appearBonusLabelEffect.play();
					}
				}
				
				private function removeLabel():void{
					board.removeElement(labels.shift());	
				}
				
				public function gameOver():void{
					Session.GAME_OVER = true;
					gameTimer.stop();
					MusicPlayer.getInstance().playYeahSound();
				}
			]]>
		</fx:Script>
		
		<!-- ========================================================================== -->
	
		<fx:Declarations>			
			
			<mx:RemoteObject id="playerWrapper" 
				        destination="PlayerWrapper" 
				        endpoint="{Names.SERVER_AMF_ENDPOINT}">
		
				         <mx:method name="getRecord"
				         			result="onGetRecord(event)"/>
			</mx:RemoteObject>
			
			<s:Move id="nextSquareMover"
					xFrom="{Session.NEXT_SQUARE_X}"
					yFrom="{Session.NEXT_SQUARE_Y}"
					xTo="{Session.WAITING_SQUARE_X}"
					yTo="{Session.WAITING_SQUARE_Y}"
					duration="250"/>

<!--
			<s:Move id="waitingSquareMoverPrepare"
					xFrom="{Session.WAITING_SQUARE_X}"
					yFrom="{Session.WAITING_SQUARE_Y}"
					xTo="{Session.WAITING_SQUARE_X + 55}"
					duration="70"/>
			<s:Move id="waitingSquareMover"
					xFrom="{Session.WAITING_SQUARE_X + 55}"
					yFrom="{Session.WAITING_SQUARE_Y}"
					xTo="{Session.CURRENT_SQUARE_X}"
					yTo="{Session.CURRENT_SQUARE_Y}"
					effectEnd="{SquareMover.getInstance().waitingMoveDone();}"
					duration="150"/>-->

			<s:Move id="currentSquareMover"
					duration="250"
					effectEnd="{SquareMover.getInstance().placeNewSquare();}"/>			
					
			<s:Scale3D id="boomsScale" scaleXBy="+.5" scaleYBy="+.5"
					duration="150"
					targets="{[boomsImage, boomsLabel]}"
					repeatCount="2"
           			repeatBehavior="reverse"
           			effectStart="{Session.BOOM_SCALE_LOCK = true}"
           			effectEnd="{Session.BOOM_SCALE_LOCK = false}"/>
					
			<mx:Parallel id="appearBaseLabelEffect">
				<s:Fade
					alphaFrom="1" alphaTo="0"
	                duration="1500"
	                effectEnd="{removeLabel()}"/>
				<s:Move
					yFrom="200" yTo="150"
	                duration="1500"/>
               <s:Scale3D scaleXBy="+4" scaleYBy="+4"
							duration="1500"/>
			</mx:Parallel>		
			<mx:Parallel id="appearBonusLabelEffect">
				<s:Fade
					alphaFrom="1" alphaTo="0"
	                duration="1500"
	                effectEnd="{removeLabel()}"/>
				<s:Move
					yFrom="300" yTo="250"
	                duration="1500" />
               <s:Scale3D scaleXBy="+5" scaleYBy="+5"
							duration="1500"/>
			</mx:Parallel>		
		</fx:Declarations>					   

		<!-- ========================================================================== -->

		<s:Group width="100%" height="100%">
			<s:Label id="gameTimerLabel" x="430" y="0" styleName="bigGreenStyle" visible="{!Session.GAME_OVER}"/>
			<s:Label id="pointsLabel" x="75" y="15" text="{Session.POINTS} pts" styleName="normalGreenStyle" visible="{!Session.GAME_OVER}"/>
			<s:Label id="recordLabel" x="85" y="55" text="Record : {Session.POINTS > Session.CURRENT_RECORD ? Session.POINTS : Session.CURRENT_RECORD} pts" styleName="littleGreenStyle" visible="{!Session.GAME_OVER}"/>
			
			<mx:Image id="panneau"
					  source="webresources/images/play/panneau.png"
					  x="42"
					  y="112"/>
		
			<mx:Image id="boomsImage"
					  source="webresources/images/play/boom.png"
					  x="90"
					  y="290"/>
		
			<s:Label id="boomsLabel" 
						x="97" y="320" 
						text="X {Session.NB_BOOMS}" 
						styleName="bigGreen2Style"/>
						
			<button:PlayButton id="boomButton"
					  x="75"
					  y="365"
					  click="{MusicPlayer.getInstance().playLoadBombSound();boomButtonPushed()}"/>

		<!-- ========================================================================== -->


			<s:Group x="210"
					 y="10"
					 click="clickHandler(event)"
					 mouseMove="moveHandler(event)">
				
				<mx:Image source="webresources/images/play/plateau.png"/>

				<mx:Image id="shadowImage"
						  alpha="0.2"
						  x="{Session.CURRENT_SHADOW_X}"
						  y="{Session.CURRENT_SHADOW_Y}"/>

				
				<s:Group id="squareContainer" width="100%" height="100%"/>
			</s:Group>

			<s:Group x="210"
					 y="10"
					 id="board"/>

		<!-- ========================================================================== -->

			<mx:Image id="gameOverImage" 
					  x="160" y="180"
			 		  visible="{Session.GAME_OVER}"
			 		  source="webresources/images/gameOver.png"/>
			<s:Label id="pointsLabelFinal" 
						right="235" 
						y="115" 
						text="{Session.POINTS} pts" 
						styleName="biggestWhiteStyle" 
						visible="{Session.GAME_OVER}"/>
			<s:Label id="recordLabelFinal" 
						x="{Session.LANGUAGE == 0 ? 235 : 275}" 
						y="285" 
						text="{Translations.NEW_RECORD.getItemAt(Session.LANGUAGE)}" 
						styleName="biggestWhiteStyle" 
						visible="{Session.GAME_OVER &amp;&amp; Session.player.uralysUID != 'NOT_CONNECTED' &amp;&amp; Session.POINTS > Session.CURRENT_RECORD}"/>
						
			<s:TextInput id="surnameInput" 
						x="400" y="360"
						height="30"
						width="180" 
						enter="endGame()"
						text="{Session.player.surname}"
						visible="{Session.GAME_OVER &amp;&amp; Session.player.uralysUID != 'NOT_CONNECTED' &amp;&amp; Session.POINTS > Session.CURRENT_RECORD}"/>
			
			<s:Button visible="{Session.GAME_OVER}"
						label="{Translations.CONTINUE.getItemAt(Session.LANGUAGE)}"
					    x="340" y="400"
						mouseOver="{MusicPlayer.getInstance().playBipSound()}"
					    skinClass="com.skooairs.skins.BigButtonSkin"
						click="{MusicPlayer.getInstance().playOkSound();endGame()}"/>
						
			
			<mx:ProgressBar id="boomProgressBar"
							x="75"
							y="360"
				            barSkin="com.skooairs.skins.CustomProgressBarSkin"
				            label=""
				            width="{boomButton.width}"
				 		    visible="{!Session.GAME_OVER}"
				            mode="manual" />
			
			<s:Button id="exitButton" 
						x="485" y="505" 
						label="{Translations.EXIT.getItemAt(Session.LANGUAGE)}" 
						skinClass="com.skooairs.skins.LittleButtonSkin"
						mouseOver="{MusicPlayer.getInstance().playBipSound()}"
						click="MusicPlayer.getInstance().playOkSound();stopGameTimer()" 
						visible="{!Session.GAME_OVER}"/>
			

		</s:Group>		
</mx:Canvas>